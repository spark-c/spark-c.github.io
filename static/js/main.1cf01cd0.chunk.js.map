{"version":3,"sources":["components/SectionButton.js","components/SectionNav.js","components/Nameblock.js","components/Header.js","components/Socials.js","components/Section.js","components/ProjectCard.js","components/ProjectWriteup.js","components/OssEntry.js","images/wcc.png","images/sparksiebot.png","images/coffee-calc.png","components/project_config.js","components/Projects.js","components/about_content.js","images/grievous.png","components/About.js","components/Contact.js","components/Blog.js","components/Construction.js","components/App.js","index.js"],"names":["SectionButton","label","selected","onSectionSelect","drawBraces","drawSelector","isLargeScreen","useState","color","setColor","renderedLabel","className","onClick","e","preventDefault","onMouseEnter","Math","floor","random","toString","onMouseLeave","SectionNav","undefined","target","Nameblock","useMediaQuery","Header","setDrawHeader","Socials","href","Section","children","isContact","type","name","ProjectCard","project","showDetails","expanded","setExpanded","src","ProjectWriteup","OssEntry","projects","sparksiebot_img","server","channel","wcc_img","coffee_img","oss","Projects","setShowDetails","selectedProject","setSelectedProject","handleSelection","boolean","project_label","projectsToShow","ossToShow","renderedProjects","map","renderedOSS","about_content","About","showImg","setShowImg","grievous","alt","Contact","setName","email","setEmail","subject","setSubject","message","setMessage","sendStatus","setSendStatus","loading","setLoading","sendMail","a","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","statusText","json","catch","error","console","log","result","handleFormSubmit","renderedStatus","value","onSubmit","htmlFor","id","onChange","Blog","cache","updateCache","posts","setPosts","useEffect","sendRequest","query","handleResponse","variables","data","handled","user","publication","getPosts","renderedPosts","post","alignment","title","slug","coverImage","brief","dateAdded","Construction","App","drawHeader","setSelected","blogCache","setBlogCache","sections","section","setSection","handleSectionSelect","scrollTarget","document","querySelector","scrollIntoView","renderedSection","ReactDOM","render"],"mappings":"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","file":"static/js/main.1cf01cd0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\nconst SectionButton = ({\r\n    label,\r\n    selected,\r\n    onSectionSelect,\r\n    drawBraces,\r\n    drawSelector,\r\n    isLargeScreen\r\n}) => {\r\n\r\n    const [color, setColor] = useState(\"\");\r\n    const updateColor = () => {\r\n        setColor(`c${Math.floor(Math.random()*6).toString()}`);\r\n    };\r\n\r\n    const handleButton = (e) => {\r\n        e.preventDefault();\r\n        onSectionSelect(label);\r\n    };\r\n\r\n    const renderedLabel = isLargeScreen || drawBraces? `~ ${label} ~`:label;\r\n\r\n    return (\r\n        <div className=\"section-button-container\">\r\n            <button className=\"section-button\" onClick={handleButton} >\r\n                <label\r\n                    className={color}\r\n                    onMouseEnter={updateColor}\r\n                    onMouseLeave={() => setColor(\"\")}>\r\n                    {renderedLabel}\r\n                </label><br/>\r\n            </button>\r\n            <div className=\"selected-marker\">\r\n                {label == selected && drawSelector? \"^\":\"\"}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SectionButton;","import React from 'react';\r\n\r\nimport SectionButton from './SectionButton';\r\n\r\n\r\nconst SectionNav = ({\r\n    selected,\r\n    onSectionSelect,\r\n    drawBraces,\r\n    drawSelector,\r\n    isLargeScreen }) => {\r\n\r\n    return (\r\n        <div className=\"section-nav\">\r\n            {drawBraces? <div className=\"instructions\">Pick a section!</div>:undefined}\r\n            <div className=\"section-buttons\">\r\n                <SectionButton\r\n                    selected={selected}\r\n                    onSectionSelect={onSectionSelect}\r\n                    drawBraces={drawBraces}\r\n                    drawSelector={drawSelector}\r\n                    label=\"Projects\"\r\n                    target=\"Projects\"/>\r\n                <SectionButton\r\n                    selected={selected}\r\n                    onSectionSelect={onSectionSelect}\r\n                    drawBraces={drawBraces}\r\n                    drawSelector={drawSelector}\r\n                    label=\"About\"\r\n                    target=\"About\" />\r\n                <SectionButton\r\n                    selected={selected}\r\n                    onSectionSelect={onSectionSelect}\r\n                    drawBraces={drawBraces}\r\n                    drawSelector={drawSelector}\r\n                    label=\"Contact\"\r\n                    target=\"Contact\" />\r\n                <SectionButton\r\n                    selected={selected}\r\n                    onSectionSelect={onSectionSelect}\r\n                    drawBraces={drawBraces}\r\n                    drawSelector={drawSelector}\r\n                    label=\"Blog\"\r\n                    target=\"Blog\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SectionNav;","import React from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nimport SectionNav from './SectionNav';\r\n\r\n\r\nconst Nameblock = ({ selected, onSectionSelect }) => {\r\n\r\n    const isLargeScreen = useMediaQuery('(min-width:515px)');\r\n\r\n    return (\r\n        <div className=\"nameblock\">\r\n            <div className=\"name-and-blurb\">\r\n                <h1 className='name-container'>\r\n                    <div className=\"name firstname\">Collin</div>\r\n                    <div className=\"name lastname\">Sparks</div>\r\n                </h1>\r\n                <div className=\"blurb\">Software Engineer</div>\r\n                <div className=\"stack\">Python | JavaScript / React</div>\r\n                {/* <div className=\"bordertext\">This is test to test is test to test is test to test is test to test is test to test!</div> */}\r\n            </div>\r\n            <SectionNav\r\n                selected={selected}\r\n                onSectionSelect={onSectionSelect}\r\n                drawBraces={true}\r\n                drawSelector={isLargeScreen}\r\n                isLargeScreen={isLargeScreen} />\r\n            {/* drawBraces=true forces the '~'s to be used in buttons that are children of Nameblock. */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nameblock;","import React from 'react';\r\n\r\nimport SectionNav from './SectionNav';\r\n\r\n\r\nconst Header = ({ selected, onSectionSelect, setDrawHeader }) => {\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <h2 className=\"name\" onClick={() => setDrawHeader(false)}>Collin Sparks</h2>\r\n            <SectionNav\r\n                selected={selected}\r\n                onSectionSelect={onSectionSelect}\r\n                drawSelector={true} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\nconst Socials = () => {\r\n\r\n    const isLargeScreen = useMediaQuery('(min-width:600px)');\r\n\r\n    return (\r\n        <div className=\"socials-container\">\r\n            <div className=\"socials-title\">Socials</div>\r\n            <div className=\"socials-items\">\r\n                <a href=\"https://github.com/spark-c\">\r\n                    <i className=\"fa fa-github\"></i>\r\n                    <div className={isLargeScreen? \"social-label\":\"hidden\"}>\r\n                        spark-c\r\n                    </div>\r\n                </a>\r\n                <a href=\"https://twitter.com/collin_sparkles\">\r\n                    <i className=\"fa fa-twitter\"></i>\r\n                    <div className={isLargeScreen? \"social-label\":\"hidden\"}>\r\n                        @collin_sparkles\r\n                    </div>\r\n                </a>\r\n                <a href=\"https://linkedin.com/in/collin-sparks\">\r\n                    <i className=\"fa fa-linkedin\"></i>\r\n                    <div className={isLargeScreen? \"social-label\":\"hidden\"}>\r\n                        Collin Sparks\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Socials;","import React from 'react';\r\n\r\nimport Socials from './Socials';\r\n\r\n\r\nconst Section = ({ children }) => {\r\n\r\n    const isContact = children.type.name === \"Contact\"? true:false;\r\n\r\n    return (\r\n        <div className=\"section-container\">\r\n            {children}\r\n            {isContact? undefined:<Socials />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Section;","import React, { useState } from 'react';\r\n\r\n\r\nconst ProjectCard = ({ project, showDetails, isLargeScreen }) => {\r\n\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [color, setColor] = useState(\"\");\r\n    const updateColor = () => {\r\n        setColor(`c${Math.floor(Math.random()*6).toString()}`);\r\n    };\r\n\r\n    return (\r\n        <div className={`card ${color}`}\r\n            onMouseEnter={updateColor}\r\n            onMouseLeave={() => setColor(\"\")}>\r\n            <div className=\"project-wrapper\">\r\n                <div className=\"img-container\">\r\n                    <img className=\"project-img\" src={project[\"img-src\"]} />\r\n                </div>\r\n                <div className=\"project-info\">\r\n                    <div className=\"project-details\">\r\n                        <div className=\"project-title item-margin\">\r\n                            {project[\"title\"]}\r\n                        </div>\r\n                        <div className=\"project-stack item-margin\">\r\n                            {project[\"stack\"]}\r\n                        </div>\r\n                        <div className=\"project-desc item-margin\">\r\n                            {project[\"desc\"]}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"project-links\">\r\n\r\n                        {project[\"writeup\"]?\r\n                        <div\r\n                            className=\"show-writeup link-hover pointer\"\r\n                            onClick={() => {\r\n                                showDetails(true, project[\"title\"])\r\n                            }}>\r\n                            Details\r\n                        </div>:undefined}\r\n\r\n                        {project[\"host-url\"]?\r\n                        <a\r\n                            className=\"project-host link-hover pointer\"\r\n                            href={project[\"host-url\"]}\r\n                            target=\"_blank\">\r\n                            {project[\"cta\"]}\r\n                        </a>:undefined}\r\n\r\n                        {project[\"embed\"]?\r\n                        <div\r\n                            className=\"project-expand link-hover pointer\"\r\n                            onClick={() => setExpanded(!expanded)}>\r\n                            {project[\"cta\"]}\r\n                        </div>:undefined}\r\n\r\n                        {project[\"github-url\"]?\r\n                        <a\r\n                            className=\"project-github link-hover \"\r\n                            href={project[\"github-url\"]}>\r\n                            GitHub\r\n                        </a>:undefined}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {project[\"embed\"] && expanded? project[\"embed\"]:undefined}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectCard;","import React from 'react';\r\n\r\n\r\nconst ProjectWriteup = ({ showDetails, project }) => {\r\n\r\n    return (\r\n        <div className=\"project-writeup\">\r\n            <button\r\n                className=\"backbutton\"\r\n                onClick={() => showDetails(false, undefined)}>\r\n                {\"<< Back\"}\r\n            </button>\r\n            <h1>{project[\"title\"]}</h1>\r\n            <p>{project[\"stack\"]}</p>\r\n            <hr/><br/>\r\n            {project[\"writeup\"]}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectWriteup;","import React, { useState } from 'react';\r\n\r\n\r\nconst OssEntry = ({ project }) => {\r\n    const [color, setColor] = useState(\"\");\r\n    const updateColor = () => {\r\n        setColor(`c${Math.floor(Math.random()*6).toString()}`);\r\n    };\r\n\r\n    return (\r\n        <div className={`oss-entry ${color}`}\r\n            onMouseEnter={updateColor}\r\n            onMouseLeave={() => setColor(\"\")}>\r\n            <a\r\n                href={project[\"repo_url\"]}\r\n                target=\"_blank\"\r\n                className=\"project-title link-hover\">\r\n                {project[\"title\"]}\r\n            </a>\r\n            <p>\r\n                {project[\"description\"]}\r\n            </p>\r\n            <a\r\n                className=\"pr link-hover\"\r\n                href={project[\"pr_url\"]}\r\n                target=\"_blank\">\r\n                    {\"{ Go to PR }\"}\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OssEntry;","export default __webpack_public_path__ + \"static/media/wcc.e23867ef.png\";","export default __webpack_public_path__ + \"static/media/sparksiebot.d0b7358c.png\";","export default __webpack_public_path__ + \"static/media/coffee-calc.8ad747d6.png\";","import * as React from 'react';\r\nimport WidgetBot from '@widgetbot/react-embed';\r\n\r\nimport wcc_img from '../images/wcc.png';\r\nimport sparksiebot_img from '../images/sparksiebot.png';\r\nimport coffee_img from '../images/coffee-calc.png';\r\n\r\nimport sparksiebot_writeup from './writeups/SparksieBOT.js';\r\n\r\n\r\nexport const projects = {\r\n    'SparksieBOT': {\r\n        \"title\": \"SparksieBOT\",\r\n        \"host-url\": undefined,\r\n        \"github-url\": \"https://github.com/spark-c/SparksieBOT\",\r\n        \"img-src\": sparksiebot_img,\r\n        \"desc\": (\r\n            <div>\r\n                <p>This bot is created and maintained to provide commands for utility and entertainment on my personal Discord server!</p>\r\n                <p>The project goes varying periods of light maintainance, heavy development for additional functionality, and occasional upkeep work to refactor old code to meet my improving code-quality standards.</p>\r\n                <p><span className=\"strike\">You can click the \"Live!\" link to interact with SparksieBOT</span> Oops! SparksieBOT is currently ignoring commands sent from this page :(</p>\r\n            </div>\r\n        ),\r\n        \"stack\": \"Python (discord.py, SQLAlchemy) | Postgres | Heroku\",\r\n        \"cta\": \"Live!\",\r\n        \"embed\": (\r\n            <WidgetBot\r\n                className=\"widgetbot\"\r\n                server=\"742418152280948857\" // sparksie test server\r\n                channel=\"871196944754696233\" // sparksiebot-live-demo\r\n            />\r\n        ),\r\n        \"writeup\": undefined,\r\n        // \"writeup\": sparksiebot_writeup,\r\n    },\r\n    \"web-contact-converter\": {\r\n        \"title\": \"web-contact-converter\",\r\n        \"host-url\": \"http://web-contact-converter.herokuapp.com\",\r\n        \"github-url\": \"https://github.com/spark-c/web-contact-converter\",\r\n        \"img-src\": wcc_img,\r\n        \"desc\": (\r\n            <div>\r\n                <p>A local company had a frequent task of manually transferring sales leads/contact information from a plain-text document into a spreadsheet -- which took <span className=\"italic\">hours</span> at a time. This app is used to enormously expedite the process!</p>\r\n                <p>Note: The app is served from a Heroku \"free\" dyno, and unfortunately may take several seconds to load while it wakes up!</p>\r\n            </div>\r\n        ),\r\n        \"stack\": \"Python (Flask, SQLAlchemy) | JavaScript | Postgres | Heroku\",\r\n        \"cta\": \"Live!\",\r\n        \"embed\": undefined,\r\n        \"writeup\": undefined,\r\n    },\r\n    \"coffee-calculator\": {\r\n        \"title\": \"coffee-calculator\",\r\n        \"host-url\": \"https://coffee-calculator-nine.vercel.app\",\r\n        \"github-url\": \"https://github.com/spark-c/coffee-calculator\",\r\n        \"img-src\": coffee_img,\r\n        \"desc\": (\r\n            <div>\r\n                <p>A small web app used for calculating the necessary variables of a pour-over coffee recipe.</p>\r\n                <p>There are several modes to account for the various common combinations of given/desired values to calculate. Soon including a setting for making iced coffee! Based on V60 paramters.</p>\r\n            </div>\r\n        ),\r\n        \"stack\": \"JavaScript (React) | Vercel\",\r\n        \"cta\": \"Live!\",\r\n        \"embed\": undefined,\r\n        \"writeup\": undefined,\r\n    },\r\n}\r\n\r\nexport const oss = {\r\n    \"chipy\": {\r\n        \"title\": \"chipy.org\",\r\n        \"description\":\r\n            \"This is the Chicago Python user group (ChiPy) main Django website codebase. This PR updates how contact form success feedback is presented to the user; replaces old alert-msg behavior with a new modal instead. (WIP)\",\r\n        \"repo_url\": \"https://github.com/chicagopython/chipy.org\",\r\n        \"pr_url\": \"https://github.com/chicagopython/chipy.org/pull/422\",\r\n    },\r\n    \"hubspot\": {\r\n        \"title\": \"hubspot-api-python\",\r\n        \"description\": \r\n            \"HubSpot's Python wrapper for their product's Auth and CRM APIs. This PR located, fixed, and tested broken links to the HubSpot API documentation in one of their sample app’s README files.\",\r\n        \"repo_url\": \"https://github.com/HubSpot/hubspot-api-python/\",\r\n        \"pr_url\": \"https://github.com/HubSpot/hubspot-api-python/pull/53\",\r\n    },\r\n    \"gh_changelog\" : {\r\n        \"title\": \"github-changelog-generator\",\r\n        \"description\":\r\n            \"This Ruby CLI tool automatically generates change-logs from tags, issues, labels and PRs on GitHub. This PR updated the project's help, docstrings, and documentation pages to accurately reflect whether each command's arguments were optional or required.\",\r\n        \"repo_url\": \"https://github.com/github-changelog-generator/github-changelog-generator/\",\r\n        \"pr_url\": \"https://github.com/github-changelog-generator/github-changelog-generator/pull/946\",\r\n    },\r\n};","import React, { useState } from 'react';\r\n\r\nimport ProjectCard from './ProjectCard';\r\nimport ProjectWriteup from './ProjectWriteup';\r\nimport OssEntry from './OssEntry';\r\nimport {projects, oss} from './project_config';\r\n\r\n\r\nconst Projects = ({ isLargeScreen }) => {\r\n    const [showDetails, setShowDetails] = useState(false);\r\n    const [selectedProject, setSelectedProject] = useState(undefined);\r\n\r\n\r\n    const handleSelection = (boolean, project_label) => {\r\n        setShowDetails(boolean);\r\n        setSelectedProject(project_label)\r\n    };\r\n\r\n    const projectsToShow = [\r\n        projects[\"SparksieBOT\"],\r\n        projects[\"web-contact-converter\"],\r\n        projects[\"coffee-calculator\"],\r\n    ];\r\n\r\n    const ossToShow = [\r\n        oss[\"chipy\"],\r\n        oss[\"gh_changelog\"],\r\n        oss[\"hubspot\"],\r\n    ];\r\n\r\n    const renderedProjects = showDetails?\r\n            <ProjectWriteup\r\n                project={projects[selectedProject]}\r\n                showDetails={handleSelection} />:\r\n            <div>\r\n                <h2>Projects</h2>\r\n                {projectsToShow.map(project => {\r\n                    return (\r\n                        <ProjectCard\r\n                            project={project}\r\n                            showDetails={handleSelection}\r\n                            isLargeScreen={isLargeScreen}\r\n                            key={project[\"title\"]}/>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n    const renderedOSS = showDetails?\r\n            undefined:\r\n            <div>\r\n                <h2>OSS Contributions</h2>\r\n                    {ossToShow.map(project => {\r\n                        return (\r\n                            <OssEntry project={project} />\r\n                        );\r\n                    })}\r\n                </div>;\r\n\r\n\r\n    return (\r\n        <div className=\"section projects\">\r\n            {showDetails?\r\n                undefined:\r\n                <h1 className=\"section-title\">[ Here's some of my work! ]</h1>}\r\n\r\n            {renderedProjects} {/* either all items, or one writeup */}\r\n            {renderedOSS}       {/* depending on value of showDetails */}\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Projects;","import React from 'react';\r\n\r\n\r\nexport const about_content = (\r\n    <div className=\"about-content\">\r\n        <p>\r\n            My name is Collin Sparks -- some people have also taken to calling me \"Sparkles\", which is fine too!\r\n        </p>\r\n        <p>\r\n            In short, I love solving problems and doing things that are useful to someone. <span className=\"italic\">Doubly</span> so when the solution involves cool technology!\r\n        </p>\r\n        <p>\r\n            I started learning to code in 2018, when my mom had some wildly tedious recurring computer work to do for her job. I figured, \"Surely there must be some better way...\" Unsurprisingly, there was!\r\n        </p>\r\n        <br/>\r\n        \r\n        <p>\r\n            One of the most attractive things to me about code is that it <span className=\"italic\">enables me to create</span>. I've sculpted, drawn, painted, built, choreographed, etc... but so far, code has been the media which helps me feel the most empowered and able to really MAKE things!\r\n        </p>\r\n        <p> \r\n            On that note, I do have a huge love for art in general -- especially the performing arts. Big time. \r\n        </p>\r\n        <br/>\r\n        <hr/>\r\n        <h2>Arts, you say?</h2>\r\n        <p>Yep!</p>\r\n        <p>\r\n            Growing up in Ohio, I spent about 8 years dancing and peforming in a dance academy / company called BalletMet. It was awesome. Ballet is at the intersection of \"incredibly artistic\" and \"wildly technical\", and completely shaped my life experience as I was growing up.\r\n        </p>\r\n        <p>\r\n            And then in college, I got really into theatre! I was both a dancer and an actor for a while, but ended up getting very interested in Lighting Design as well. I've designed / implemented / programmed lights for a bunch of shows now, both in and out of school.\r\n        </p>\r\n\r\n    </div>\r\n);\r\n\r\n\r\n\r\nexport const about_content_wip = (\r\n    <div className=\"about-content\">\r\n        <p>\r\n            My name is Collin Sparks -- some people have also taken to calling me \"Sparkles\", which is fine too!\r\n        </p>\r\n        <p>\r\n            In short, I love solving problems and doing things that are useful to someone. <span className=\"italic\">Doubly</span> so when the solution involves cool technology!\r\n        </p>\r\n\r\n\r\n        {/* ACCORDION */}\r\n        {/* try one of those list-detail tag things, Toni on twitter */}\r\n       \r\n        {/* Do I like learning? */}\r\n        <p> \r\n            My mom and I always joked that I would end up being a \"forever-student\" that went to college and just... kept going. I loved learning all sorts of things! For me, one of the biggest upsides of learning to code was the fact that I'l always have more pathways for learning and trying new things.\r\n        </p>\r\n\r\n        {/* How did I start programming? */}\r\n        <p> \r\n            In 2018, my mom was dealing with some disgustingly tedious computer tasks at her job, and I did a bit of research to see if there was anything I could find to help her out. I found a course by Al Sweigart, called \"Automate the Boring Stuff With Python\" which, coincidentally, was the exact thing I was trying to do. I dug into the course, and...\r\n        </p>\r\n        <p>Hook... Line... SINKER.</p>\r\n        <p>\r\n            I've been <span className=\"italic\">amazed</span> at all of the things I've learned how to do in the past few years with technology.\r\n        </p>\r\n\r\n        {/* Did I see something about dance/theatre? */}\r\n        <p> \r\n            I have a huge love for art in general, and especially the performing arts. Big time. \r\n        </p>\r\n        <p>\r\n            Growing up in Ohio, I spent about 8 years dancing and peforming in a dance academy / company called BalletMet. It was awesome. Ballet is at the intersection of \"incredibly artistic\" and \"wildly technical\", and completely shaped my life experience as I was growing up.\r\n        </p>\r\n        <p>\r\n            And then in college, I got really into theatre! I was both a dancer and an actor for a while, but ended up getting very interested in Lighting Design as well. I've designed / implemented / programmed lights for a bunch of shows now, both in and out of school.\r\n        </p>\r\n    </div>\r\n);\r\n\r\nexport const accordionConfig = [\r\n    {\r\n        label: \"Item 1\",\r\n        content: \"This is item 1's content!\",\r\n    },\r\n    {\r\n        label: \"Item 2\",\r\n        content: \"This is the content for item number two!\",\r\n    },\r\n]","export default __webpack_public_path__ + \"static/media/grievous.8ae934ef.png\";","import React, { useState } from 'react';\r\n\r\nimport Accordion from './Accordion';\r\nimport { about_content, accordionConfig } from './about_content.js';\r\nimport grievous from '../images/grievous.png';\r\n\r\n\r\nconst About = () => {\r\n    const [showImg, setShowImg] = useState(false);\r\n\r\n    return (\r\n        <div className=\"section about\">\r\n            <h1 className=\"section-title\"\r\n            onMouseEnter={() => setShowImg(true)}\r\n            onMouseLeave={() => setShowImg(false)}\r\n            onClick={() => setShowImg(!showImg)}>\r\n                [ Hello there! ]\r\n            </h1>\r\n            {\r\n                showImg?\r\n                <img\r\n                    className=\"grievous\"\r\n                    src={grievous}\r\n                    alt=\"Star Wars' General Grievous saying 'General Kenobi!'\"\r\n                />:\r\n                undefined\r\n            }\r\n            {/* <Accordion config={accordionConfig} /> */}\r\n            {about_content}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React, { useState } from 'react';\r\n\r\nimport Socials from './Socials';\r\n\r\n\r\nconst Contact = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [subject, setSubject] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [sendStatus, setSendStatus] = useState(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const sendMail = async () => {\r\n        const response = await fetch(\r\n            \"https://sparksie-api.vercel.app/send_email\",\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"sender_name\": name,\r\n                \"sender_email\": email,\r\n                \"subject\": subject,\r\n                \"body\": message,\r\n            }) \r\n        })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw Error(response.statusText);\r\n            }\r\n            return response.json()\r\n        })\r\n        .catch(error => {\r\n            console.log(`hello my name is ${error}`);\r\n            setSendStatus(\"error\")\r\n        });\r\n\r\n        let result = await response;\r\n        return result;\r\n    };\r\n\r\n\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        if (sendStatus) {\r\n            setSendStatus(undefined);\r\n        }\r\n\r\n        const result = await sendMail();\r\n        if (await result) {\r\n            setSendStatus(\"success\");\r\n            setMessage(\"\");\r\n            setName(\"\");\r\n            setEmail(\"\");\r\n            setSubject(\"\");\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    const renderedStatus = {\"value\": undefined}\r\n    switch (sendStatus) {\r\n        case \"success\":\r\n            renderedStatus.value = (\r\n                <p className=\"feedback\">\r\n                    Email successfully sent!\r\n                </p>\r\n            );\r\n            break;\r\n        case \"error\":\r\n            renderedStatus.value = (\r\n                <p className=\"feedback\">\r\n                    Something went wrong on our end!\r\n                </p>\r\n            );\r\n            break;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"section contact\">\r\n            <h1 className=\"section-title\">[ Send an email below! ]</h1>\r\n            <Socials />\r\n            {renderedStatus.value}\r\n            <div className=\"contact-content\">\r\n                <form\r\n                className=\"contact-form\"\r\n                onSubmit={handleFormSubmit}>\r\n                    \r\n                    {loading?\r\n                        <p className=\"loading-message\">Sending...</p>:\r\n                        undefined\r\n                    }\r\n                    {\r\n                    loading?\r\n                        <div className=\"loading\">\r\n                        </div>:\r\n                        undefined\r\n                    }\r\n\r\n                    <div className=\"short-fields\">\r\n                        <div className=\"name-input\">\r\n                            <label htmlFor=\"name-input\">\r\n                                Your Name<span className=\"red\">*</span>\r\n                            </label>\r\n                            <input\r\n                                className=\"input short\"\r\n                                id=\"name-input\"\r\n                                type=\"text\"\r\n                                value={name}\r\n                                onChange={e => setName(e.target.value)}>\r\n                            </input>\r\n                        </div>\r\n\r\n                        <div className=\"email-input\">\r\n                            <label htmlFor=\"email-input\">\r\n                                Your Email<span className=\"red\">*</span>\r\n                            </label>\r\n                            <input\r\n                            className=\"input short\"\r\n                            id=\"email-input\"\r\n                            type=\"text\"\r\n                            name=\"sender\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}>\r\n                            </input>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <label htmlFor=\"subject-input\">\r\n                        Subject Line<span className=\"red\">*</span>\r\n                    </label>\r\n                    <input\r\n                    className=\"input\"\r\n                    id=\"subject-input\"\r\n                    type=\"text\"\r\n                    name=\"subject\"\r\n                    value={subject}\r\n                    onChange={e => setSubject(e.target.value)}>\r\n                    </input>\r\n                    \r\n                    <label htmlFor=\"message-input\">\r\n                        Message Body<span className=\"red\">*</span>\r\n                    </label>\r\n                    <textarea\r\n                    className=\"input\"\r\n                    id=\"message-input\"\r\n                    name=\"body\"\r\n                    value={message}\r\n                    onChange={e => setMessage(e.target.value)}>\r\n                    </textarea>\r\n\r\n                    <p className=\"contact-cc\">\r\n                        Note: You will be cc'd on the email :)\r\n                    </p>\r\n\r\n                    <input\r\n                    id=\"contact-submit\"\r\n                    type=\"submit\"\r\n                    value=\"Send!\">\r\n                    </input>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contact;","import React, { useState, useEffect } from 'react';\r\nimport ProjectCard from './ProjectCard';\r\n\r\n\r\nconst Blog = ({ cache, updateCache, isLargeScreen }) => {\r\n\r\n    const [posts, setPosts] = useState(cache);\r\n\r\n    useEffect(() => {\r\n        updateCache(posts);\r\n    }, [posts]);\r\n\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, []);\r\n    \r\n    const query = `\r\n    {\r\n        user(username: \"collin-sparkles\") {\r\n          publication {\r\n            posts(page: 0) {\r\n              title\r\n              brief\r\n              slug\r\n              dateAdded\r\n              coverImage\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n\r\n    const sendRequest = () => {\r\n        // e.preventDefault();\r\n\r\n        async function handleResponse() {\r\n            const data = await fetch('https://api.hashnode.com/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    query:query,\r\n                    variables:{}\r\n                })\r\n            });\r\n\r\n            return data.json();\r\n        }\r\n\r\n        async function getPosts() {\r\n            const handled = await handleResponse();\r\n            setPosts(handled.data.user.publication.posts)\r\n        }\r\n        getPosts();\r\n    };\r\n\r\n    const renderedPosts = posts?\r\n        posts.map(post => {\r\n            return(\r\n                <ProjectCard\r\n                    isLargeScreen={isLargeScreen}\r\n                    alignment={\"left\"}\r\n                    project={{\r\n                        \"title\": post.title,\r\n                        \"host-url\":\r\n                            `https://sparksnotes.hashnode.dev/${post.slug}`,\r\n                        \"github-url\": undefined,\r\n                        \"img-src\": post.coverImage,\r\n                        \"desc\": post.brief,\r\n                        \"date\": post.dateAdded,\r\n                        \"cta\": \"Read more!\",\r\n                    }}\r\n                    key={post.slug} />\r\n            );\r\n        }):\r\n        undefined\r\n\r\n    return (\r\n        <div className=\"section blog\">\r\n            <h1 className=\"section-title\">\r\n                <a\r\n                href=\"https://sparksnotes.hashnode.dev\">\r\n                        [ Check out&nbsp;\r\n                    <em className=\"link-hover\">Sparks' Notes!</em>\r\n                </a> ]\r\n            </h1>\r\n            <div className=\"blog-content\">\r\n                {/* <button onClick={sendRequest} value=\"REQUEST\">REQUEST</button> */}\r\n                <div>\r\n                    {renderedPosts? renderedPosts:<h2>Loading...</h2>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Blog;","import React from 'react';\r\n\r\n\r\nconst Construction = () => {\r\n\r\n    return (\r\n        <div className=\"construction\">\r\n            <div className=\"construction-text\">\r\n                Site under construction! :)\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Construction;","import React, {useState} from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nimport \"./stylesheet.css\";\r\nimport Nameblock from './Nameblock';\r\nimport Header from './Header';\r\nimport Section from './Section';\r\nimport Projects from './Projects';\r\nimport About from './About';\r\nimport Contact from './Contact';\r\nimport Blog from './Blog';\r\nimport Construction from './Construction';\r\n\r\n\r\nconst App = () => {\r\n    const isLargeScreen = useMediaQuery('(min-width:515px)');\r\n\r\n    const [drawHeader, setDrawHeader] = useState(false);\r\n    const [selected, setSelected] = useState(\"Projects\");\r\n    const [blogCache, setBlogCache] = useState(undefined);\r\n    const sections = {\r\n        \"Projects\": <Projects\r\n            isLargeScreen={isLargeScreen} />,\r\n        \"About\": <About />,\r\n        \"Contact\": <Contact />,\r\n        \"Blog\": <Blog\r\n            isLargeScreen={isLargeScreen}\r\n            cache={blogCache}\r\n            updateCache={setBlogCache}/>,\r\n    }\r\n    const [section, setSection] = useState(sections[selected]);\r\n\r\n    const handleSectionSelect = (label) => {\r\n        if (isLargeScreen === false) {\r\n            setDrawHeader(true);\r\n        };\r\n        let scrollTarget = isLargeScreen?\r\n            document.querySelector(\".instructions\"):\r\n            document.querySelector(\"body\");\r\n\r\n        setSelected(label);\r\n        setSection(sections[label]);\r\n        if (scrollTarget) {\r\n            scrollTarget.scrollIntoView(true);\r\n        };\r\n    };\r\n\r\n    const renderedSection = (\r\n        <Section label={selected}>\r\n            {section}\r\n        </Section>\r\n    )\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            {\r\n            drawHeader === true?\r\n                <Header\r\n                    onSectionSelect={handleSectionSelect}\r\n                    selected={selected}\r\n                    setDrawHeader={setDrawHeader}/>:\r\n                <Nameblock\r\n                    onSectionSelect={handleSectionSelect}\r\n                    selected={selected} />\r\n            }\r\n            <Construction />\r\n\r\n            {isLargeScreen || drawHeader === true? renderedSection:undefined}\r\n            {/* if on mobile and using Nameblock, DON'T draw a section! */}\r\n            <footer>\r\n                <div>{\"Created by Collin Sparks with React :)\"}</div>\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}