{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Collin Sparks\\\\Desktop\\\\code\\\\gh_pages\\\\app\\\\src\\\\components\\\\SectionButton.js\";\nimport React from 'react';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SectionButton = ({\n  label,\n  selected,\n  onSectionSelect,\n  drawBraces,\n  isLargeScreen\n}) => {\n  // const isLargeScreen = useMediaQuery('(min-width: 450px)');\n  const handleButton = e => {\n    e.preventDefault();\n    onSectionSelect(label);\n  };\n\n  const renderedLabel = isLargeScreen || drawBraces ? `~ ${label} ~` : label;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section-button-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"section-button\",\n      onClick: handleButton,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: renderedLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-marker\",\n      children: label == selected && !drawBraces ? \"^\" : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SectionButton;\nexport default SectionButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SectionButton\");","map":{"version":3,"sources":["C:/Users/Collin Sparks/Desktop/code/gh_pages/app/src/components/SectionButton.js"],"names":["React","useMediaQuery","SectionButton","label","selected","onSectionSelect","drawBraces","isLargeScreen","handleButton","e","preventDefault","renderedLabel"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;;;AAGA,MAAMC,aAAa,GAAG,CAAC;AACnBC,EAAAA,KADmB;AAEnBC,EAAAA,QAFmB;AAGnBC,EAAAA,eAHmB;AAInBC,EAAAA,UAJmB;AAKnBC,EAAAA;AALmB,CAAD,KAMhB;AAEF;AAEA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,eAAe,CAACF,KAAD,CAAf;AACH,GAHD;;AAKA,QAAMQ,aAAa,GAAGJ,aAAa,IAAID,UAAjB,GAA8B,KAAIH,KAAM,IAAxC,GAA4CA,KAAlE;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAEK,YAA5C;AAAA,8BACI;AAAA,kBAAQG;AAAR;AAAA;AAAA;AAAA;AAAA,cADJ,eACkC;AAAA;AAAA;AAAA;AAAA,cADlC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACKR,KAAK,IAAIC,QAAT,IAAqB,CAACE,UAAtB,GAAkC,GAAlC,GAAsC;AAD3C;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA3BD;;KAAMJ,a;AA6BN,eAAeA,aAAf","sourcesContent":["import React from 'react';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\nconst SectionButton = ({\r\n    label,\r\n    selected,\r\n    onSectionSelect,\r\n    drawBraces,\r\n    isLargeScreen\r\n}) => {\r\n\r\n    // const isLargeScreen = useMediaQuery('(min-width: 450px)');\r\n\r\n    const handleButton = (e) => {\r\n        e.preventDefault();\r\n        onSectionSelect(label);\r\n    };\r\n\r\n    const renderedLabel = isLargeScreen || drawBraces? `~ ${label} ~`:label;\r\n\r\n    return (\r\n        <div className=\"section-button-container\">\r\n            <button className=\"section-button\" onClick={handleButton} >\r\n                <label>{renderedLabel}</label><br/>\r\n            </button>\r\n            <div className=\"selected-marker\">\r\n                {label == selected && !drawBraces? \"^\":\"\"}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SectionButton;"]},"metadata":{},"sourceType":"module"}