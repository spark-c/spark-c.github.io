{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Collin Sparks\\\\Desktop\\\\code\\\\gh_pages\\\\app\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./stylesheet.css\";\nimport Nameblock from './Nameblock';\nimport Header from './Header';\nimport Projects from './Projects';\nimport About from './About';\nimport Contact from './Contact';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const isLargeScreen = useMediaQuery('(min-width:450px)');\n  const [drawHeader, setDrawHeader] = useState(false);\n  const [selected, setSelected] = useState(\"Projects\");\n  const sections = {\n    \"Projects\": /*#__PURE__*/_jsxDEV(Projects, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this),\n    \"About\": /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 18\n    }, this),\n    \"Contact\": /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 20\n    }, this)\n  };\n  const [section, setSection] = useState(selected);\n\n  const handleSectionSelect = label => {\n    setSelected(label);\n    setSection(sections[label]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [drawHeader === true ? /*#__PURE__*/_jsxDEV(Header, {\n      onSectionSelect: handleSectionSelect,\n      selected: selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Nameblock, {\n      onSectionSelect: handleSectionSelect,\n      selected: selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setDrawHeader(!drawHeader),\n      children: \"Swap!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), isLargeScreen || drawHeader === true ? `${isLargeScreen}` : undefined]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"L+fhrfbsgFefB4RfDkVbwiqW/lo=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Collin Sparks/Desktop/code/gh_pages/app/src/components/App.js"],"names":["React","useState","Nameblock","Header","Projects","About","Contact","useMediaQuery","App","isLargeScreen","drawHeader","setDrawHeader","selected","setSelected","sections","section","setSection","handleSectionSelect","label","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,kBAAP;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAMC,aAAa,GAAGF,aAAa,CAAC,mBAAD,CAAnC;AAEA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,UAAD,CAAxC;AACA,QAAMa,QAAQ,GAAG;AACb,6BAAY,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADC;AAEb,0BAAS,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFI;AAGb,4BAAW,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAHE,GAAjB;AAKA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAACW,QAAD,CAAtC;;AAEA,QAAMK,mBAAmB,GAAIC,KAAD,IAAW;AACnCL,IAAAA,WAAW,CAACK,KAAD,CAAX;AACAF,IAAAA,UAAU,CAACF,QAAQ,CAACI,KAAD,CAAT,CAAV;AAEH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,eAEIR,UAAU,KAAK,IAAf,gBACI,QAAC,MAAD;AAAQ,MAAA,eAAe,EAAEO,mBAAzB;AAA8C,MAAA,QAAQ,EAAEL;AAAxD;AAAA;AAAA;AAAA;AAAA,YADJ,gBAEI,QAAC,SAAD;AAAW,MAAA,eAAe,EAAEK,mBAA5B;AAAiD,MAAA,QAAQ,EAAEL;AAA3D;AAAA;AAAA;AAAA;AAAA,YAJR,eAMI;AAAQ,MAAA,OAAO,EAAE,MAAMD,aAAa,CAAC,CAACD,UAAF,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,EAQKD,aAAa,IAAIC,UAAU,KAAK,IAAhC,GAAuC,GAAED,aAAc,EAAvD,GAAyDU,SAR9D;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA/BD;;GAAMX,G;UACoBD,a;;;KADpBC,G;AAiCN,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport \"./stylesheet.css\";\r\n\r\nimport Nameblock from './Nameblock';\r\nimport Header from './Header';\r\nimport Projects from './Projects';\r\nimport About from './About';\r\nimport Contact from './Contact';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\n\r\nconst App = () => {\r\n    const isLargeScreen = useMediaQuery('(min-width:450px)');\r\n\r\n    const [drawHeader, setDrawHeader] = useState(false);\r\n    const [selected, setSelected] = useState(\"Projects\");\r\n    const sections = {\r\n        \"Projects\": <Projects />,\r\n        \"About\": <About />,\r\n        \"Contact\": <Contact />\r\n    }\r\n    const [section, setSection] = useState(selected);\r\n\r\n    const handleSectionSelect = (label) => {\r\n        setSelected(label)\r\n        setSection(sections[label]);\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            {\r\n            drawHeader === true?\r\n                <Header onSectionSelect={handleSectionSelect} selected={selected} />:\r\n                <Nameblock onSectionSelect={handleSectionSelect} selected={selected} />\r\n            }\r\n            <button onClick={() => setDrawHeader(!drawHeader)}>Swap!</button>\r\n\r\n            {isLargeScreen || drawHeader === true? `${isLargeScreen}`:undefined}\r\n            {/* if on mobile and using Nameblock, DON'T draw a section! */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}